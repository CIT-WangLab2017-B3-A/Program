#!/usr/bin/python
#coding: utf-8
import os
import wiringpi as wp
import time

# SPI channle (0 or 1)
MCP_CH = 0
# pin base (above 64)
PIN_BASE=70

# registance
#R1=4.10*1000.0  # [Ω]
#R2=5.32*1000.0  # [Ω]
R1=3.9*1000.0  # [Ω]
R2=5.6*1000.0  # [Ω]
SumRegistance = R1+R2

#voltage
Vcc_MAX=12.0 # [V]
Vdd=4.8 # [V]
Vref=Vdd
Vlsb=Vref/1024.0

#amplitude
Iin= 0.0 # [A]
#Iin= 0.00003 # [A]

# setup
wp.mcp3002Setup (PIN_BASE, MCP_CH)
wp.wiringPiSetupGpio()

# limit
mcp3002_data = float(wp.analogRead(PIN_BASE+MCP_CH))
Vin = ((mcp3002_data/1024.0)*Vdd) # 2.988[V] if Vcc=7.4[V]
Vcc = (Vin/R2+Iin)*SumRegistance
Vcc_cat = 3.0
Vset = 7.4 if Vcc<9.0 else 11.1
Vcc_shutdown = Vset*0.84
Vcc_beep = Vset*0.9

while True:

    #Vcc
    Vcc = 0.0
    mcp3002_data = float(wp.analogRead(PIN_BASE+MCP_CH))
    print mcp3002_data
    Vin = ((mcp3002_data/1024.0)*Vdd) # 2.988[V] if Vcc=7.4[V]
    Vcc = (Vin/R2+Iin)*SumRegistance

    if   Vcc < Vcc_cat:
        pass
    elif Vcc < Vcc_shutdown:
        #print "<ここでシャットダウン操作>"
        time.sleep(1.0)
        os.system('sudo poweroff')
    elif Vcc < Vcc_shutdown+0.1: # <3.15[V/cel](絶対目安)
        os.system("sudo ./buzzer tel")
        #print "ヤバイ(早く充電): ",
    elif Vcc < Vcc_beep: # 3.15<3.3[V/cel](安心目安)
        os.system("sudo ./buzzer mac")
        #print "ピンチ(そろそろ充電): ",
    else:
        #print "大丈夫(使用可能): ",
        pass
    #print Vcc
    time.sleep(0.1)
